spring.application.name=hbv501g_h3
server.port=8081
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# what to do on start
spring.jpa.hibernate.ddl-auto=update
spring.mvc.static-path-pattern=/static/**

# show the SQL commands in console for debugging
# spring.jpa.show-sql=true
# spring.jpa.open-in-view=false
# What is the path to the DB
# h2 saves everything from the database either in memory or in a file
spring.datasource.url=jdbc:postgresql://autorack.proxy.rlwy.net:23895/railway
spring.datasource.username=postgres
spring.datasource.password=PhNThCuvuXJuTKMuaudKcvTNdnJKBRyG
# postgresql://postgres:PhNThCuvuXJuTKMuaudKcvTNdnJKBRyG@autorack.proxy.rlwy.net:23895/railway
spring.jpa.properties.hibernate.format_sql=true
# file:./data/dbfile
# U7JsacofoAoSh7K7w3NEHQvjWDqXWk99
# passap_fysk_user
# spring.datasource.url=jdbc:postgresql://dpg-cs853elsvqrc73bkhjg0-a.oregon-postgres.render.com/passap_fysk
# spring.datasource.password=U7JsacofoAoSh7K7w3NEHQvjWDqXWk99
# spring.datasource.username=passap_fysk_user
spring.datasource.driver-class-name=org.postgresql.Driver
# spring.jpa.hibernate.ddl-auto=update  # You can set it to 'validate', 'update', 'create', or 'create-drop'
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# spring.datasource.url=jdbc:h2:file:./data/dbfile
# spring.datasource.driverClassName = org.h2.Driver
spring.datasource.driverClassName = org.postgresql.Driver

# credentials
#spring.datasource.username=us
#spring.datasource.password=
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# enabling the H2 console
spring.h2.console.enabled=true



